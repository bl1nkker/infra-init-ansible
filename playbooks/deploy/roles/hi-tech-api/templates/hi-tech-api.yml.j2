services:
  service:
    image: blinkker/strapi-hi-tech:dev
    command: npm run develop
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=hi_tech
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD={{ db_password }}
      - PUBLIC_URL=https://{{ hi_tech_domain }}
      - DATABASE_SSL=false
      - DATABASE_SSL_SELF=false
      - HOST=0.0.0.0
      - PORT=1337
      - APP_KEYS={{ app_keys }}
      - API_TOKEN_SALT={{ api_token_salt }}
      - ADMIN_JWT_SECRET={{ admin_jwt_secret }}
      - TRANSFER_TOKEN_SALT={{ transfer_token_salt }}
      - ENCRYPTION_KEY={{ encryption_key }}
      - JWT_SECRET={{ jwt_secret }}
    networks:
      apps:
        aliases:
          - hi-tech-api
    volumes:
      - type: volume
        source: app-data
        target: /app/public/uploads
        volume:
          nocopy: true
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.app-ui == true
      labels:
        {% if hi_tech_domain | length > 0 -%}
        - traefik.http.routers.hi-tech-api-router.rule=Host(`{{ hi_tech_domain }}`)
        - traefik.http.routers.hi-tech-api-router.tls=true
        - traefik.http.routers.hi-tech-api-router.priority=99
        - traefik.http.routers.hi-tech-api-router.tls.certresolver=letsencrypt
        {% else -%}
        - traefik.http.routers.hi-tech-api-router.rule=PathPrefix(`/backend`)
        {% endif -%}

        - traefik.enable=true
        - traefik.http.routers.hi-tech-api-router.entrypoints=http,https
        # - traefik.http.routers.hi-tech-api-router.middlewares=hi-tech-api-middleware
        # - traefik.http.middlewares.hi-tech-api-middleware.stripprefix.prefixes=/backend
        - traefik.http.services.hi-tech-api-service.loadbalancer.server.port=1337
  
volumes:
  app-data:
    driver_opts:
      type: nfs
      o: 'addr={{ nfs_source }},rw,nfsvers=4,async'
      device: ":{{ nfs_path }}"

networks:
  apps:
    driver: overlay
    external: true