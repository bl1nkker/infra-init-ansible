#SPDX-License-Identifier: MIT-0
---
# tasks file for playbooks/scripts/roles/default
- name: Check python version
  debug:
    var: ansible_python_version

- name: Show inventory hostname
  debug:
    var: ansible_hostname

- name: Install prerequisites
  become: "{{ run_as_root }}"
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: latest
    update_cache: true
  when: False

- name: Download Docker GPG key
  become: "{{ run_as_root }}"
  ansible.builtin.get_url:
    url: "{{ docker_apt_key_url }}"
    dest: /tmp/docker.gpg
    # rw-r-r
    mode: "0644"
  when: False

- name: Add Docker apt GPG key to keyring
  become: "{{ run_as_root }}"
  ansible.builtin.command:
    cmd: gpg --dearmor -o {{ docker_apt_key_path }} /tmp/docker.gpg
  args:
    # idempotency. if file exists, skip the task
    creates: "{{ docker_apt_key_path }}"
  when: False

- name: Add Docker apt repository
  become: "{{ run_as_root }}"
  ansible.builtin.copy:
    dest: /etc/apt/sources.list.d/docker.list
    content: "{{ docker_repo }}"
    # rw-r-r
    mode: "0644"
  when: False

- name: Update apt
  become: "{{ run_as_root }}"
  ansible.builtin.apt:
    update_cache: true
  when: False

- name: Install Docker Engine
  become: "{{ run_as_root }}"
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: latest
  when: False

- name: Enabling docker
  become: "{{ run_as_root }}"
  ansible.builtin.systemd:
    state: started
    enabled: true
    name: docker
  when: False

- name: Adding users to docker group
  become: "{{ run_as_root }}"
  ansible.builtin.shell:
    cmd: "sudo usermod -aG docker {{ item }}"
  loop:
    - "{{ remote_user }}"
  when: False

- name: Creating docker daemon config file
  become: "{{ run_as_root }}"
  ansible.builtin.shell:
    cmd: |-
      mkdir -p /etc/docker
      touch /etc/docker/daemon.json
      cat > /etc/docker/daemon.json <<EOL
        {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m",
          "max-file": "3"
        }
      }
      EOL
  when: False

- name: Restart docker engine
  become: "{{ run_as_root }}"
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: True
    name: docker
  when: False

- name: Reset SSH connection to allow user changes to affect 'current login user'
  ansible.builtin.meta: reset_connection

- name: Docker Login
  docker_login:
    username: blinkker
    password: "{{ docker_password }}"
    registry_url: "https://index.docker.io/v1/"
  vars:
    docker_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      66626433643934383336656236383062636433663637383265623765626230656137376639633236
      3631636365653530633836306530376337326466616336370a346539663038393431303264323034
      31333564333237323364363734326265343630633639356566393266656536383766343966353932
      6135363435656538630a636263353062383337663865616631656463323463616666336461316135
      3966
  when: False

- name: Test Docker Pull command
  ansible.builtin.shell: docker pull hello-world
  when: False

- name: Permit traffic in default zone for ssh service
  become: "{{ run_as_root }}"
  community.general.ufw:
    rule: allow
    name: OpenSSH
  when: False

# Remove Nginx HTTP Profile
- name: Remove Nginx HTTP Profile
  become: "{{ run_as_root }}"
  community.general.ufw:
    rule: allow
    name: "Nginx HTTP"
    delete: True
  when: False

# Allow Nginx Full Profile (HTTP, HTTPS)
- name: Allow Nginx Full Profile (HTTP, HTTPS)
  become: "{{ run_as_root }}"
  community.general.ufw:
    rule: allow
    name: "Nginx Full"
  when: False

- name: "Permitting docker 2376 port for {{ firewall_zone }}"
  become: "{{ run_as_root }}"
  community.general.ufw:
    rule: allow
    port: 2376
    proto: tcp
    src: "{{ firewall_subnet }}"
  when: False

- name: "Permitting docker port 2376/tcp for {{ firewall_zone }}"
  become: "{{ run_as_root }}"
  community.general.ufw:
    rule: allow
    port: 2376
    proto: tcp
    src: "{{ firewall_subnet }}"
  when: False

- name: "Permitting docker port 2377/tcp for {{ firewall_zone }}"
  become: "{{ run_as_root }}"
  community.general.ufw:
    rule: allow
    port: 2377
    proto: tcp
    src: "{{ firewall_subnet }}"
  when: False

- name: "Permitting docker port 7946/tcp for {{ firewall_zone }}"
  become: "{{ run_as_root }}"
  community.general.ufw:
    rule: allow
    port: 7946
    proto: tcp
    src: "{{ firewall_subnet }}"
  when: False

- name: "Permitting docker port 7946/udp for {{ firewall_zone }}"
  become: "{{ run_as_root }}"
  community.general.ufw:
    rule: allow
    port: 7946
    proto: udp
    src: "{{ firewall_subnet }}"
  when: False

- name: "Permitting docker port 4789/udp for {{ firewall_zone }}"
  become: "{{ run_as_root }}"
  community.general.ufw:
    rule: allow
    port: 4789
    proto: udp
    src: "{{ firewall_subnet }}"
  when: False

- name: Permitting nfs port 111/tcp
  become: "{{ run_as_root }}"
  community.general.ufw:
    rule: allow
    port: 111
    proto: tcp
    src: "{{ firewall_subnet }}"
  when: False

- name: Permitting nfs port 111/udp
  become: "{{ run_as_root }}"
  community.general.ufw:
    rule: allow
    port: 111
    proto: udp
    src: "{{ firewall_subnet }}"
  when: False

- name: Permitting nfs port 2049/tcp
  become: "{{ run_as_root }}"
  community.general.ufw:
    rule: allow
    port: 2049
    proto: tcp
    src: "{{ firewall_subnet }}"
  when: False

- name: Permitting nfs port 2049/udp
  become: "{{ run_as_root }}"
  community.general.ufw:
    rule: allow
    port: 2049
    proto: udp
    src: "{{ firewall_subnet }}"
  when: False
